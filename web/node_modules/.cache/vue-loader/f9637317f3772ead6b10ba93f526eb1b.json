{"remainingRequest":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\Go\\project\\GSL-IOT\\web\\src\\components\\chooseImg\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\Go\\project\\GSL-IOT\\web\\src\\components\\chooseImg\\index.vue","mtime":1601862474837},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601862450187},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1601862448530},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601862450187},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1601862472047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEZpbGVMaXN0IH0gZnJvbSAiQC9hcGkvZmlsZVVwbG9hZEFuZERvd25sb2FkIjsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICB0YXJnZXQ6IFtPYmplY3RdLAogICAgdGFyZ2V0S2V5OiBbU3RyaW5nXQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRyYXdlcjogZmFsc2UsCiAgICAgIHBpY0xpc3Q6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgY2hvb3NlSW1nKHVybCwgdGFyZ2V0LCB0YXJnZXRLZXkpIHsKICAgICAgaWYodGFyZ2V0JiZ0YXJnZXRLZXkpewogICAgICAgIHRhcmdldFt0YXJnZXRLZXldID0gdXJsOwogICAgICB9CiAgICAgIHRoaXMuJGVtaXQoImVudGVyLWltZyIsIHVybCk7CiAgICAgIHRoaXMuZHJhd2VyID0gZmFsc2U7CiAgICB9LAogICAgYXN5bmMgb3BlbigpIHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0RmlsZUxpc3QoeyBwYWdlOiAxLCBwYWdlU2l6ZTogOTk5OSB9KTsKICAgICAgdGhpcy5waWNMaXN0ID0gcmVzLmRhdGEubGlzdDsKICAgICAgdGhpcy5kcmF3ZXIgPSB0cnVlOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/chooseImg","sourcesContent":["<template>\n  <el-drawer title=\"媒体库\" :visible.sync=\"drawer\">\n    <div style=\"display:flex;justify-content:space-around;flex-wrap:wrap;padding-top:40px\">\n      <el-image\n        class=\"header-img-box-list\"\n        :src=\"item.url\"\n        v-for=\"(item,key) in picList\"\n        :key=\"key\"\n        @click.native=\"chooseImg(item.url,target,targetKey)\"\n      >\n        <div slot=\"error\" class=\"header-img-box-list\">\n          <i class=\"el-icon-picture-outline\"></i>\n        </div>\n      </el-image>\n    </div>\n  </el-drawer>\n</template>\n\n<script>\nimport { getFileList } from \"@/api/fileUploadAndDownload\";\nexport default {\n  props: {\n    target: [Object],\n    targetKey: [String]\n  },\n  data() {\n    return {\n      drawer: false,\n      picList: []\n    };\n  },\n  methods: {\n    chooseImg(url, target, targetKey) {\n      if(target&&targetKey){\n        target[targetKey] = url;\n      }\n      this.$emit(\"enter-img\", url);\n      this.drawer = false;\n    },\n    async open() {\n      const res = await getFileList({ page: 1, pageSize: 9999 });\n      this.picList = res.data.list;\n      this.drawer = true;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.header-img-box-list {\n  width: 180px;\n  height: 180px;\n  border: 1px dashed #ccc;\n  border-radius: 20px;\n  text-align: center;\n  line-height: 180px;\n  cursor: pointer;\n}\n</style>"]}]}