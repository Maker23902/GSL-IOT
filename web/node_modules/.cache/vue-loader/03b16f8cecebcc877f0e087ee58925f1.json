{"remainingRequest":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\Go\\project\\GSL-IOT\\web\\src\\view\\superAdmin\\menu\\menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\Go\\project\\GSL-IOT\\web\\src\\view\\superAdmin\\menu\\menu.vue","mtime":1601862474887},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601862450187},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1601862448530},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601862450187},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1601862472047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"menu.vue","sourceRoot":"src/view/superAdmin/menu","sourcesContent":["<template>\n  <div>\n    <div class=\"button-box clearflex\">\n      <el-button @click=\"addMenu('0')\" type=\"primary\">新增根菜单</el-button>\n    </div>\n\n    <!-- 由于此处菜单跟左侧列表一一对应所以不需要分页 pageSize默认999 -->\n    <el-table :data=\"tableData\" border row-key=\"ID\" stripe>\n      <el-table-column label=\"ID\" min-width=\"100\" prop=\"ID\"></el-table-column>\n      <el-table-column label=\"路由Name\" min-width=\"160\" prop=\"name\"></el-table-column>\n      <el-table-column label=\"路由Path\" min-width=\"160\" prop=\"path\"></el-table-column>\n      <el-table-column label=\"是否隐藏\" min-width=\"100\" prop=\"hidden\">\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.hidden?\"隐藏\":\"显示\"}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"父节点\" min-width=\"90\" prop=\"parentId\"></el-table-column>\n      <el-table-column label=\"排序\" min-width=\"70\" prop=\"sort\"></el-table-column>\n      <el-table-column label=\"文件路径\" min-width=\"360\" prop=\"component\"></el-table-column>\n      <el-table-column label=\"展示名称\" min-width=\"120\" prop=\"authorityName\">\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.meta.title}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"图标\" min-width=\"140\" prop=\"authorityName\">\n        <template slot-scope=\"scope\">\n          <i :class=\"`el-icon-${scope.row.meta.icon}`\"></i>\n          <span>{{scope.row.meta.icon}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"300\">\n        <template slot-scope=\"scope\">\n          <el-button\n            @click=\"addMenu(scope.row.ID)\"\n            size=\"small\"\n            type=\"primary\"\n            icon=\"el-icon-edit\"\n          >添加子菜单</el-button>\n          <el-button\n            @click=\"editMenu(scope.row.ID)\"\n            size=\"small\"\n            type=\"primary\"\n            icon=\"el-icon-edit\"\n          >编辑</el-button>\n          <el-button\n            @click=\"deleteMenu(scope.row.ID)\"\n            size=\"small\"\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog :before-close=\"handleClose\" :title=\"dialogTitle\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        :inline=\"true\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-position=\"top\"\n        label-width=\"85px\"\n        ref=\"menuForm\"\n      >\n        <el-form-item label=\"路由name\" prop=\"path\" style=\"width:30%\">\n          <el-input\n            @change=\"changeName\"\n            autocomplete=\"off\"\n            placeholder=\"唯一英文字符串\"\n            v-model=\"form.name\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item prop=\"path\" style=\"width:30%\">\n          <div style=\"display:inline-block\" slot=\"label\">\n            路由path\n            <el-checkbox style=\"float:right;margin-left:20px;\" v-model=\"checkFlag\">添加参数</el-checkbox>\n          </div>\n          <el-input\n            :disabled=\"!checkFlag\"\n            autocomplete=\"off\"\n            placeholder=\"建议只在后方拼接参数\"\n            v-model=\"form.path\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"是否隐藏\" style=\"width:30%\">\n          <el-select placeholder=\"是否在列表隐藏\" v-model=\"form.hidden\">\n            <el-option :value=\"false\" label=\"否\"></el-option>\n            <el-option :value=\"true\" label=\"是\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"父节点Id\" style=\"width:30%\">\n          <el-cascader\n            :disabled=\"!this.isEdit\"\n            :options=\"menuOption\"\n            :props=\"{ checkStrictly: true,label:'title',value:'ID',disabled:'disabled',emitPath:false}\"\n            :show-all-levels=\"false\"\n            filterable\n            v-model=\"form.parentId\"\n          ></el-cascader>\n        </el-form-item>\n        <el-form-item label=\"文件路径\" prop=\"component\" style=\"width:30%\">\n          <el-input autocomplete=\"off\" v-model=\"form.component\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"展示名称\" prop=\"meta.title\" style=\"width:30%\">\n          <el-input autocomplete=\"off\" v-model=\"form.meta.title\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"图标\" prop=\"meta.icon\" style=\"width:30%\">\n          <icon :meta=\"form.meta\">\n            <template slot=\"prepend\">el-icon-</template>\n          </icon>\n        </el-form-item>\n        <el-form-item label=\"排序标记\" prop=\"sort\" style=\"width:30%\">\n          <el-input autocomplete=\"off\" v-model.number=\"form.sort\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"keepAlive\" prop=\"meta.keepAlive\" style=\"width:30%\">\n          <el-select placeholder=\"是否keepAlive缓存页面\" v-model=\"form.meta.keepAlive\">\n            <el-option :value=\"false\" label=\"否\"></el-option>\n            <el-option :value=\"true\" label=\"是\"></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div class=\"warning\">新增菜单需要在角色管理内配置权限才可使用</div>\n      <div>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          icon=\"el-icon-edit\"\n          @click=\"addParameter(form)\"\n        >新增菜单参数</el-button>\n        <el-table :data=\"form.parameters\" stripe style=\"width: 100%\">\n          <el-table-column prop=\"type\" label=\"参数类型\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.type\" placeholder=\"请选择\">\n                <el-option key=\"query\" value=\"query\" label=\"query\"></el-option>\n                <el-option key=\"params\" value=\"params\" label=\"params\"></el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"key\" label=\"参数key\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <div>\n                <el-input v-model=\"scope.row.key\"></el-input>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"value\" label=\"参数值\">\n            <template slot-scope=\"scope\">\n              <div>\n                <el-input v-model=\"scope.row.value\"></el-input>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column>\n            <template slot-scope=\"scope\">\n              <div>\n                <el-button\n                  type=\"danger\"\n                  size=\"small\"\n                  icon=\"el-icon-delete\"\n                  @click=\"deleteParameter(form.parameters,scope.$index)\"\n                >删除</el-button>\n              </div>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      <div class=\"dialog-footer\" slot=\"footer\">\n        <el-button @click=\"closeDialog\">取 消</el-button>\n        <el-button @click=\"enterDialog\" type=\"primary\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n// 获取列表内容封装在mixins内部  getTableData方法 初始化已封装完成\n\nimport {\n  updateBaseMenu,\n  getMenuList,\n  addBaseMenu,\n  deleteBaseMenu,\n  getBaseMenuById\n} from \"@/api/menu\";\nimport infoList from \"@/components/mixins/infoList\";\nimport icon from \"@/view/superAdmin/menu/icon\";\nexport default {\n  name: \"Menus\",\n  mixins: [infoList],\n  data() {\n    return {\n      checkFlag: false,\n      listApi: getMenuList,\n      dialogFormVisible: false,\n      dialogTitle: \"新增菜单\",\n      menuOption: [\n        {\n          ID: \"0\",\n          title: \"根菜单\"\n        }\n      ],\n      form: {\n        ID: 0,\n        path: \"\",\n        name: \"\",\n        hidden: \"\",\n        parentId: \"\",\n        component: \"\",\n        meta: {\n          title: \"\",\n          icon: \"\",\n          defaultMenu: false,\n          keepAlive: false\n        },\n        parameters: []\n      },\n      rules: {\n        path: [{ required: true, message: \"请输入菜单name\", trigger: \"blur\" }],\n        component: [\n          { required: true, message: \"请输入文件路径\", trigger: \"blur\" }\n        ],\n        \"meta.title\": [\n          { required: true, message: \"请输入菜单展示名称\", trigger: \"blur\" }\n        ]\n      },\n      isEdit: false,\n      test: \"\"\n    };\n  },\n  components: {\n    icon\n  },\n  methods: {\n    addParameter(form) {\n      if (!form.parameters){\n        form.parameters = []\n      }\n      form.parameters.push({\n        type: \"query\",\n        key: \"\",\n        value: \"\"\n      });\n    },\n    deleteParameter(parameters, index) {\n      parameters.splice(index, 1);\n    },\n    changeName() {\n      this.form.path = this.form.name;\n    },\n    setOptions() {\n      this.menuOption = [\n        {\n          ID: \"0\",\n          title: \"根目录\"\n        }\n      ];\n      this.setMenuOptions(this.tableData, this.menuOption, false);\n    },\n    setMenuOptions(menuData, optionsData, disabled) {\n      menuData &&\n        menuData.map(item => {\n          if (item.children && item.children.length) {\n            const option = {\n              title: item.meta.title,\n              ID: String(item.ID),\n              disabled: disabled || item.ID == this.form.ID,\n              children: []\n            };\n            this.setMenuOptions(\n              item.children,\n              option.children,\n              disabled || item.ID == this.form.ID\n            );\n            optionsData.push(option);\n          } else {\n            const option = {\n              title: item.meta.title,\n              ID: String(item.ID),\n              disabled: disabled || item.ID == this.form.ID\n            };\n            optionsData.push(option);\n          }\n        });\n    },\n    handleClose(done) {\n      this.initForm();\n      done();\n    },\n    // 懒加载子菜单\n    load(tree, treeNode, resolve) {\n      resolve([\n        {\n          id: 31,\n          date: \"2016-05-01\",\n          name: \"王小虎\",\n          address: \"上海市普陀区金沙江路 1519 弄\"\n        },\n        {\n          id: 32,\n          date: \"2016-05-01\",\n          name: \"王小虎\",\n          address: \"上海市普陀区金沙江路 1519 弄\"\n        }\n      ]);\n    },\n    // 删除菜单\n    deleteMenu(ID) {\n      this.$confirm(\"此操作将永久删除所有角色下该菜单, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(async () => {\n          const res = await deleteBaseMenu({ ID });\n          if (res.code == 0) {\n            this.$message({\n              type: \"success\",\n              message: \"删除成功!\"\n            });\n            this.getTableData();\n          }\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n    },\n    // 初始化弹窗内表格方法\n    initForm() {\n      this.checkFlag = false;\n      this.$refs.menuForm.resetFields();\n      this.form = {\n        ID: 0,\n        path: \"\",\n        name: \"\",\n        hidden: \"\",\n        parentId: \"\",\n        component: \"\",\n        meta: {\n          title: \"\",\n          icon: \"\",\n          defaultMenu: false,\n          keepAlive: \"\"\n        }\n      };\n    },\n    // 关闭弹窗\n    closeDialog() {\n      this.initForm();\n      this.dialogFormVisible = false;\n    },\n    // 添加menu\n    async enterDialog() {\n      this.$refs.menuForm.validate(async valid => {\n        if (valid) {\n          let res;\n          if (this.isEdit) {\n            res = await updateBaseMenu(this.form);\n          } else {\n            res = await addBaseMenu(this.form);\n          }\n          if (res.code == 0) {\n            this.$message({\n              type: \"success\",\n              message: this.isEdit ? \"编辑成功\" : \"添加成功!\"\n            });\n            this.getTableData();\n          }\n          this.initForm();\n          this.dialogFormVisible = false;\n        }\n      });\n    },\n    // 添加菜单方法，id为 0则为添加根菜单\n    addMenu(id) {\n      this.dialogTitle = \"新增菜单\";\n      this.form.parentId = String(id);\n      this.isEdit = false;\n      this.setOptions();\n      this.dialogFormVisible = true;\n    },\n    // 修改菜单方法\n    async editMenu(id) {\n      this.dialogTitle = \"编辑菜单\";\n      const res = await getBaseMenuById({ id });\n      this.form = res.data.menu;\n      this.isEdit = true;\n      this.setOptions();\n      this.dialogFormVisible = true;\n    }\n  },\n  async created() {\n    this.pageSize = 999;\n    await this.getTableData();\n  }\n};\n</script>\n<style scoped lang=\"scss\">\n.button-box {\n  padding: 10px 20px;\n  .el-button {\n    float: right;\n  }\n}\n.warning {\n  color: #dc143c;\n}\n</style>\n"]}]}