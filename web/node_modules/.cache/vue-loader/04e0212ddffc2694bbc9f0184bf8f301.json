{"remainingRequest":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Programs\\Project\\GSL-IOT\\web\\src\\view\\LoraWAN\\LuaEditor.vue?vue&type=style&index=0&id=776eeb37&scoped=true&lang=css&","dependencies":[{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\src\\view\\LoraWAN\\LuaEditor.vue","mtime":1603701683980},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KZGl2IHsNCiAgICBmb250OiAxMnB4L25vcm1hbCAnTW9uYWNvJywgJ01lbmxvJywgJ1VidW50dSBNb25vJywgJ0NvbnNvbGFzJywgJ3NvdXJjZS1jb2RlLXBybycsIG1vbm9zcGFjZTsNCiAgICBmb250LXN0eWxlOiBub3JtYWw7DQogICAgZm9udC12YXJpYW50LWxpZ2F0dXJlczogbm9ybWFsOw0KICAgIGZvbnQtdmFyaWFudC1jYXBzOiBub3JtYWw7DQogICAgZm9udC12YXJpYW50LW51bWVyaWM6IG5vcm1hbDsNCiAgICBmb250LXZhcmlhbnQtZWFzdC1hc2lhbjogbm9ybWFsOw0KICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7DQogICAgZm9udC1zdHJldGNoOiBub3JtYWw7DQogICAgZm9udC1zaXplOiAxMnB4Ow0KICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7DQogICAgZm9udC1mYW1pbHk6IE1vbmFjbywgTWVubG8sICJVYnVudHUgTW9ubyIsIENvbnNvbGFzLCBzb3VyY2UtY29kZS1wcm8sIG1vbm9zcGFjZTsNCn0NCg=="},{"version":3,"sources":["LuaEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LuaEditor.vue","sourceRoot":"src/view/LoraWAN","sourcesContent":["<template>\r\n<div>\r\n    <editor v-model=\"content\" :content=\"content\" :lang=\"'lua'\" theme=\"monokai\" width=\"100%\" height=\"800\" :options=\"{\r\n            enableBasicAutocompletion: true,\r\n            enableSnippets: true,\r\n            enableLiveAutocompletion: true,       \r\n            showPrintMargin:false,   //去除编辑器里的竖线\r\n        }\" @init=\"editorInit\">\r\n    </editor>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'aceEditor',\r\n    components: {\r\n        editor: require('vue2-ace-editor'),\r\n    },\r\n    data() {\r\n        return {\r\n            content: \"\r\n            gpio.mode(5, gpio.OUTPUT)\r\n            gpio.write(5, 0)\r\n            print(\"sdsd\")\r\n            io = require(\"iothink\")\r\n            io.init(\"192.168.1.36\", 2)\r\n\r\n            local\r\n            function spl(s, delimiter)\r\n            result = {};\r\n            for match in (s..delimiter): gmatch(\"(.-)\"..delimiter) do\r\n                    table.insert(result, match);\r\n                end\r\n            return result;\r\n            end\r\n\r\n            io.addVariable(\"heap\", function () return node.heap()\r\n                end)\r\n            io.addVariable(\"temp\", function () temperature = \"35.50\"\r\n                humidity = \"75.50\"\r\n                return '{\"id\": 2, \"temperature\": '..temperature..\r\n                ', \"humidity\": '..humidity..\r\n                ' }'\r\n                end)\r\n            io.addFunction(\"rgb\", function (param) list = spl(payload, \",\") local pin = tonumber(list[1]) local r = tonumber(list[2]) local g = tonumber(list[3]) local b = tonumber(list[4]) ws2812.writergb(pin, string.char(r, g, b): rep(8)) sendHeader(conn) return '{\"result\":\"ok\"}'\r\n                end)\r\n            io.addFunction(\"toggle\", function (param) print(\"toggle\") local pin = tonumber(param) if gpio.read(pin) == 1 then gpio.write(pin, 0)\r\n                else\r\n                    gpio.write(pin, 1)\r\n                end\r\n                return '{ \"status\": '..gpio.read(pin)..\r\n                ', \"coreID\": \"'..node.chipid()..\r\n                '\", \"id\": '..pin..\r\n                ' }'\r\n                end)\r\n\r\n            io.on(\"disconnection\", function () print(\"Disconnected..\") end)\r\n            io.on(\"connection\", function () print(\"Connected..\") end)\r\n            io.connect()\r\n            \"\r\n        }\r\n    },\r\n    methods: {\r\n        editorInit() {\r\n            require('brace/ext/language_tools') //language extension prerequsite...\r\n            require('brace/mode/lua') //language\r\n            require('brace/theme/monokai')\r\n            require('brace/snippets/lua') //snippet\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n    font: 12px/normal 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', 'source-code-pro', monospace;\r\n    font-style: normal;\r\n    font-variant-ligatures: normal;\r\n    font-variant-caps: normal;\r\n    font-variant-numeric: normal;\r\n    font-variant-east-asian: normal;\r\n    font-weight: normal;\r\n    font-stretch: normal;\r\n    font-size: 12px;\r\n    line-height: normal;\r\n    font-family: Monaco, Menlo, \"Ubuntu Mono\", Consolas, source-code-pro, monospace;\r\n}\r\n</style>\r\n"]}]}