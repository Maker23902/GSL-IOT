{"remainingRequest":"D:\\Programs\\Project\\gin-vue-admin-master\\web\\node_modules\\babel-loader\\lib\\index.js!D:\\Programs\\Project\\gin-vue-admin-master\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Programs\\Project\\gin-vue-admin-master\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Programs\\Project\\gin-vue-admin-master\\web\\src\\view\\example\\simpleUploader\\simpleUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Programs\\Project\\gin-vue-admin-master\\web\\src\\view\\example\\simpleUploader\\simpleUploader.vue","mtime":1600866450000},{"path":"D:\\Programs\\Project\\gin-vue-admin-master\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Programs\\Project\\gin-vue-admin-master\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Programs\\Project\\gin-vue-admin-master\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Programs\\Project\\gin-vue-admin-master\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJEOi9Qcm9ncmFtcy9Qcm9qZWN0L2dpbi12dWUtYWRtaW4tbWFzdGVyL3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkQ6L1Byb2dyYW1zL1Byb2plY3QvZ2luLXZ1ZS1hZG1pbi1tYXN0ZXIvd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIG5vdFVwbG9hZGVkQ2h1bmtzID0gW107IC8vIOW3sue7j+S4iuS8oOi/h+eahOaWh+S7tmNodW5rTnVtYmVy5pWw57uECgp2YXIgaXNVcGxvYWRlZCA9IGZhbHNlOyAvLyDmlofku7blt7Lnu4/kuIrkvKDmiJDlip/kuoYKCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IHsgY2hlY2tGaWxlTWQ1LCBtZXJnZUZpbGVNZDUgfSBmcm9tICJAL2FwaS9zaW1wbGVVcGxvYWRlciI7CmltcG9ydCBTcGFya01ENSBmcm9tICJzcGFyay1tZDUiOwp2YXIgcGF0aCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAic2ltcGxlVXBsb2FkZXIiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZDU6ICIiCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycygidXNlciIsIFsidXNlckluZm8iLCAidG9rZW4iXSkpLCB7fSwgewogICAgc3RhdHVzVGV4dDogZnVuY3Rpb24gc3RhdHVzVGV4dCgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBzdWNjZXNzOiAi5oiQ5Yqf5LqGIiwKICAgICAgICBlcnJvcjogIuWHuumUmeS6hiIsCiAgICAgICAgdXBsb2FkaW5nOiAi5LiK5Lyg5LitIiwKICAgICAgICBwYXVzZWQ6ICLmmoLlgZzkuK0iLAogICAgICAgIHdhaXRpbmc6ICLnrYnlvoXkuK0iCiAgICAgIH07CiAgICB9LAogICAgb3B0aW9uczogZnVuY3Rpb24gb3B0aW9ucygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB0YXJnZXQ6IHBhdGggKyAiL3NpbXBsZVVwbG9hZGVyL3VwbG9hZCIsCiAgICAgICAgdGVzdENodW5rczogZmFsc2UsCiAgICAgICAgc2ltdWx0YW5lb3VzVXBsb2FkczogNSwKICAgICAgICBjaHVua1NpemU6IDIgKiAxMDI0ICogMTAyNCwKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAieC10b2tlbiI6IHRoaXMudG9rZW4sCiAgICAgICAgICAieC11c2VyLWlkIjogdGhpcy51c2VySW5mby5JRAogICAgICAgIH0sCiAgICAgICAgY2hlY2tDaHVua1VwbG9hZGVkQnlSZXNwb25zZTogZnVuY3Rpb24gY2hlY2tDaHVua1VwbG9hZGVkQnlSZXNwb25zZShjaHVuaykgewogICAgICAgICAgaWYgKGlzVXBsb2FkZWQpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vIHJldHVybiB0cnVlIOS8muW/veeVpeW9k+WJjeaWh+S7tu+8jOS4jeS8muWGjeWPkemAgee7meWQjuWPsAogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8g5qC55o2u5bey57uP5LiK5Lyg6L+H55qE5YiH54mH5p2l6L+b6KGM5b+955WlCiAgICAgICAgICAgIHJldHVybiBub3RVcGxvYWRlZENodW5rcyAmJiBub3RVcGxvYWRlZENodW5rcy5zb21lKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0uY2h1bmtOdW1iZXIgPT0gY2h1bmsub2Zmc2V0ICsgMTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwogICAgfQogIH0pLAogIG1ldGhvZHM6IHsKICAgIC8vIOS4iuS8oOWNleS4quaWh+S7tgogICAgZmlsZUFkZGVkOiBmdW5jdGlvbiBmaWxlQWRkZWQoZmlsZSkgewogICAgICB0aGlzLmNvbXB1dGVNRDUoZmlsZSk7IC8vIOeUn+aIkE1ENQogICAgfSwKICAgIC8vIOiuoeeul01ENeWAvAogICAgY29tcHV0ZU1ENTogZnVuY3Rpb24gY29tcHV0ZU1ENShmaWxlKSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgaXNVcGxvYWRlZCA9IGZhbHNlOyAvLyDov5nkuKrmlofku7bmmK/lkKblt7Lnu4/kuIrkvKDmiJDlip/ov4cKCiAgICAgIG5vdFVwbG9hZGVkQ2h1bmtzID0gW107IC8vIOacquaIkOWKn+eahGNodW5rTnVtYmVyCgogICAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHZhciBtZDUgPSAiIjsKICAgICAgZmlsZS5wYXVzZSgpOwogICAgICBmaWxlUmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUuZmlsZSk7CgogICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoZSkgewogICAgICAgICAgdmFyIHJlczsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgaWYgKCEoZmlsZS5zaXplICE9IGUudGFyZ2V0LnJlc3VsdC5ieXRlTGVuZ3RoKSkgewogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICB0aGlzLmVycm9yKCJCcm93c2VyIHJlcG9ydGVkIHN1Y2Nlc3MgYnV0IGNvdWxkIG5vdCByZWFkIHRoZSBmaWxlIHVudGlsIHRoZSBlbmQuIik7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgIG1kNSA9IFNwYXJrTUQ1LkFycmF5QnVmZmVyLmhhc2goZS50YXJnZXQucmVzdWx0LCBmYWxzZSk7CiAgICAgICAgICAgICAgICAgIGZpbGUudW5pcXVlSWRlbnRpZmllciA9IG1kNTsKCiAgICAgICAgICAgICAgICAgIGlmICghKG1kNSAhPSAiIikpIHsKICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgICByZXR1cm4gY2hlY2tGaWxlTWQ1KHsKICAgICAgICAgICAgICAgICAgICBtZDU6IG1kNQogICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMCkgewogICAgICAgICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5pc0RvbmUpIHsKICAgICAgICAgICAgICAgICAgICAgIC8vIOS4iuS8oOaIkOWKn+i/hwogICAgICAgICAgICAgICAgICAgICAgaXNVcGxvYWRlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICB0aGF0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogIuivpeaWh+S7tuW3sue7j+S4iuS8oOaIkOWKn+i/h+S6hu+8jOenkuS8oOaIkOWKn+OAgiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIgogICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICBmaWxlLmNhbmNlbCgpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICBpc1VwbG9hZGVkID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICBub3RVcGxvYWRlZENodW5rcyA9IHJlcy5kYXRhLmNodW5rczsKCiAgICAgICAgICAgICAgICAgICAgICBpZiAobm90VXBsb2FkZWRDaHVua3MubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGUucmVzdW1lKCk7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgICB9KSk7CgogICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfTsKICAgICAgfSgpOwoKICAgICAgZmlsZVJlYWRlci5vbmVycm9yID0gZnVuY3Rpb24gKCkgewogICAgICAgIHRoaXMuZXJyb3IoImdlbmVyYXRlciBtZDUg5pe2RmlsZVJlYWRlcuW8guatpeivu+WPluaWh+S7tuWHuumUmeS6hu+8jEZpbGVSZWFkZXIgb25lcnJvciB3YXMgdHJpZ2dlcmVkLCBtYXliZSB0aGUgYnJvd3NlciBhYm9ydGVkIGR1ZSB0byBoaWdoIG1lbW9yeSB1c2FnZS4iKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH07CiAgICB9LAogICAgLy8g5LiK5Lyg6L+b5bqmCiAgICBvbkZpbGVQcm9ncmVzczogZnVuY3Rpb24gb25GaWxlUHJvZ3Jlc3MoKSB7fSwKICAgIC8vIOS4iuS8oOaIkOWKnwogICAgb25GaWxlU3VjY2VzczogZnVuY3Rpb24gb25GaWxlU3VjY2Vzcyhyb290RmlsZSwgZmlsZSkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIG1lcmdlRmlsZU1kNSh7CiAgICAgICAgICAgICAgICAgIG1kNTogZmlsZS51bmlxdWVJZGVudGlmaWVyLAogICAgICAgICAgICAgICAgICBmaWxlTmFtZTogZmlsZS5uYW1lCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgb25GaWxlRXJyb3I6IGZ1bmN0aW9uIG9uRmlsZUVycm9yKHJvb3RGaWxlLCBmaWxlLCByZXNwb25zZSkgewogICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICBtZXNzYWdlOiByZXNwb25zZSwKICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["simpleUploader.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <uploader\n    :options=\"options\"\n    :file-status-text=\"statusText\"\n    :autoStart=\"false\"\n    @file-added=\"fileAdded\"\n    @file-progress=\"onFileProgress\"\n    @file-success=\"onFileSuccess\"\n    @file-error=\"onFileError\"\n    class=\"uploader-example\"\n  >\n    <uploader-unsupport></uploader-unsupport>\n    <uploader-drop>\n      <p>拖拽文件至此或点击</p>\n      <uploader-btn>选择文件</uploader-btn>\n    </uploader-drop>\n    <uploader-list></uploader-list>\n  </uploader>\n</template>\n\n<script>\nvar notUploadedChunks = []; // 已经上传过的文件chunkNumber数组\nvar isUploaded = false; // 文件已经上传成功了\nimport { mapGetters } from \"vuex\";\nimport { checkFileMd5,mergeFileMd5 } from \"@/api/simpleUploader\";\nimport SparkMD5 from \"spark-md5\";\nconst path = process.env.VUE_APP_BASE_API;\nexport default {\n  name: \"simpleUploader\",\n  data(){\n    return{\n      md5:\"\"\n    }\n  },\n  computed: {\n    ...mapGetters(\"user\", [\"userInfo\", \"token\"]),\n    statusText() {\n      return {\n        success: \"成功了\",\n        error: \"出错了\",\n        uploading: \"上传中\",\n        paused: \"暂停中\",\n        waiting: \"等待中\"\n      };\n    },\n    options() {\n      return {\n        target: path + \"/simpleUploader/upload\",\n        testChunks: false,\n        simultaneousUploads: 5,\n        chunkSize: 2 * 1024 * 1024,\n        headers: {\n          \"x-token\": this.token,\n          \"x-user-id\": this.userInfo.ID\n        },\n        checkChunkUploadedByResponse(chunk) {\n          if (isUploaded) {\n            return true; // return true 会忽略当前文件，不会再发送给后台\n          } else {\n              // 根据已经上传过的切片来进行忽略\n              return (\n                notUploadedChunks &&\n                notUploadedChunks.some(\n                  item => item.chunkNumber == chunk.offset + 1\n                )\n              );\n          }\n        }\n      };\n    }\n  },\n  methods: {\n\n    // 上传单个文件\n    fileAdded(file) {\n      this.computeMD5(file); // 生成MD5\n    },\n    // 计算MD5值\n    computeMD5(file) {\n      var that = this;\n      isUploaded = false; // 这个文件是否已经上传成功过\n      notUploadedChunks = []; // 未成功的chunkNumber\n      var fileReader = new FileReader();\n      var md5 = \"\";\n\n      file.pause();\n\n      fileReader.readAsArrayBuffer(file.file);\n      fileReader.onload = async function(e) {\n        if (file.size != e.target.result.byteLength) {\n          this.error(\n            \"Browser reported success but could not read the file until the end.\"\n          );\n          return false;\n        }\n        md5 = SparkMD5.ArrayBuffer.hash(e.target.result, false);\n        \n        file.uniqueIdentifier = md5;\n        if (md5 != \"\") {\n          const res = await checkFileMd5({ md5: md5 });\n          if (res.code == 0) {\n            if (res.data.isDone) {\n              // 上传成功过\n              isUploaded = true;\n              that.$message({\n                message: \"该文件已经上传成功过了，秒传成功。\",\n                type: \"success\"\n              });\n\n              file.cancel();\n            } else {\n              isUploaded = false;\n              notUploadedChunks = res.data.chunks;\n              if(notUploadedChunks.length){\n                file.resume();\n              }\n            }\n          }\n        }\n\n        \n      };\n      fileReader.onerror = function() {\n        this.error(\n          \"generater md5 时FileReader异步读取文件出错了，FileReader onerror was triggered, maybe the browser aborted due to high memory usage.\"\n        );\n        return false;\n      };\n    },\n    // 上传进度\n    onFileProgress() {},\n    // 上传成功\n    async onFileSuccess(rootFile, file) {\n      await mergeFileMd5({md5:file.uniqueIdentifier,fileName:file.name})\n    },\n    onFileError(rootFile, file, response) {\n      this.$message({\n        message: response,\n        type: \"error\"\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.uploader-example {\n  width: 880px;\n  padding: 15px;\n  margin: 40px auto 0;\n  font-size: 12px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\n}\n.uploader-example .uploader-btn {\n  margin-right: 4px;\n}\n.uploader-example .uploader-list {\n  max-height: 440px;\n  overflow: auto;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n</style>"],"sourceRoot":"src/view/example/simpleUploader"}]}