{"remainingRequest":"D:\\Program Files\\Microsoft VS Code\\Myproject\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js!D:\\Program Files\\Microsoft VS Code\\Myproject\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Program Files\\Microsoft VS Code\\Myproject\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program Files\\Microsoft VS Code\\Myproject\\GSL-IOT\\web\\src\\view\\systemTools\\autoCode\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program Files\\Microsoft VS Code\\Myproject\\GSL-IOT\\web\\src\\view\\systemTools\\autoCode\\index.vue","mtime":1605791078216},{"path":"D:\\Program Files\\Microsoft VS Code\\Myproject\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605791053029},{"path":"D:\\Program Files\\Microsoft VS Code\\Myproject\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1605791047245},{"path":"D:\\Program Files\\Microsoft VS Code\\Myproject\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605791053029},{"path":"D:\\Program Files\\Microsoft VS Code\\Myproject\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1605791077116}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 从数据库直接获取字段 -->\r\n    <el-collapse v-model=\"activeNames\">\r\n      <el-collapse-item name=\"1\">\r\n        <template slot=\"title\">\r\n          <div :style=\"{fontSize:'16px',paddingLeft:'20px'}\">\r\n            点这里从现有数据库创建代码\r\n            <i class=\"header-icon el-icon-thumb\"></i>\r\n          </div>\r\n        </template>\r\n        <el-form ref=\"getTableForm\" :inline=\"true\" :model=\"dbform\" label-width=\"120px\">\r\n          <el-form-item label=\"数据库名\" prop=\"structName\">\r\n            <el-select @change=\"getTable\" v-model=\"dbform.dbName\" filterable placeholder=\"请选择数据库\">\r\n              <el-option\r\n                v-for=\"item in dbOptions\"\r\n                :key=\"item.database\"\r\n                :label=\"item.database\"\r\n                :value=\"item.database\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"表名\" prop=\"structName\">\r\n            <el-select\r\n              v-model=\"dbform.tableName\"\r\n              :disabled=\"!dbform.dbName\"\r\n              filterable\r\n              placeholder=\"请选择表\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in tableOptions\"\r\n                :key=\"item.tableName\"\r\n                :label=\"item.tableName\"\r\n                :value=\"item.tableName\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button @click=\"getColume\" type=\"primary\">使用此表创建</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-collapse-item>\r\n    </el-collapse>\r\n\r\n    <el-divider></el-divider>\r\n    <!-- 初始版本自动化代码工具 -->\r\n    <el-form ref=\"autoCodeForm\" :rules=\"rules\" :model=\"form\" label-width=\"120px\" :inline=\"true\">\r\n      <el-form-item label=\"Struct名称\" prop=\"structName\">\r\n        <el-input v-model=\"form.structName\" placeholder=\"首字母自动转换大写\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"tableName\" prop=\"tableName\">\r\n        <el-input v-model=\"form.tableName\" placeholder=\"指定表名（非必填）\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"Struct简称\" prop=\"abbreviation\">\r\n        <el-input v-model=\"form.abbreviation\" placeholder=\"简称会作为入参对象名和路由group\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"Struct中文名称\" prop=\"description\">\r\n        <el-input v-model=\"form.description\" placeholder=\"中文描述作为自动api描述\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"文件名称\" prop=\"packageName\">\r\n        <el-input v-model=\"form.packageName\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"自动创建api\">\r\n        <el-checkbox v-model=\"form.autoCreateApiToSql\"></el-checkbox>\r\n      </el-form-item>\r\n    </el-form>\r\n    <!-- 组件列表 -->\r\n    <div class=\"button-box clearflex\">\r\n      <el-button @click=\"editAndAddField()\" type=\"primary\">新增Field</el-button>\r\n    </div>\r\n    <el-table :data=\"form.fields\" border stripe>\r\n      <el-table-column type=\"index\" label=\"序列\" width=\"100\"></el-table-column>\r\n      <el-table-column prop=\"fieldName\" label=\"Field名\"></el-table-column>\r\n      <el-table-column prop=\"fieldDesc\" label=\"中文名\"></el-table-column>\r\n      <el-table-column prop=\"fieldJson\" label=\"FieldJson\"></el-table-column>\r\n      <el-table-column prop=\"fieldType\" label=\"Field数据类型\" width=\"130\"></el-table-column>\r\n      <el-table-column prop=\"dataType\" label=\"数据库字段类型\" width=\"130\"></el-table-column>\r\n      <el-table-column prop=\"dataTypeLong\" label=\"数据库字段长度\" width=\"130\"></el-table-column>\r\n      <el-table-column prop=\"columnName\" label=\"数据库字段\" width=\"130\"></el-table-column>\r\n      <el-table-column prop=\"comment\" label=\"数据库字段描述\" width=\"130\"></el-table-column>\r\n      <el-table-column prop=\"fieldSearchType\" label=\"搜索条件\" width=\"130\"></el-table-column>\r\n      <el-table-column prop=\"dictType\" label=\"字典\" width=\"130\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"300\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            icon=\"el-icon-edit\"\r\n            @click=\"editAndAddField(scope.row)\"\r\n          >编辑</el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"text\"\r\n            :disabled=\"scope.$index == 0\"\r\n            @click=\"moveUpField(scope.$index)\"\r\n          >上移</el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"text\"\r\n            :disabled=\"(scope.$index + 1) == form.fields.length\"\r\n            @click=\"moveDownField(scope.$index)\"\r\n          >下移</el-button>\r\n          <el-popover placement=\"top\" v-model=\"scope.row.visible\">\r\n            <p>确定删除吗？</p>\r\n            <div style=\"text-align: right; margin: 0\">\r\n              <el-button size=\"mini\" type=\"text\" @click=\"scope.row.visible = false\">取消</el-button>\r\n              <el-button type=\"primary\" size=\"mini\" @click=\"deleteField(scope.$index)\">确定</el-button>\r\n            </div>\r\n            <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" slot=\"reference\">删除</el-button>\r\n          </el-popover>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-tag type=\"danger\">id , created_at , updated_at , deleted_at 会自动生成请勿重复创建</el-tag>\r\n    <!-- 组件列表 -->\r\n    <div class=\"button-box clearflex\">\r\n      <el-button @click=\"enterForm\" type=\"primary\">生成代码包</el-button>\r\n    </div>\r\n    <!-- 组件弹窗 -->\r\n    <el-dialog title=\"组件内容\" :visible.sync=\"dialogFlag\">\r\n      <FieldDialog v-if=\"dialogFlag\" :dialogMiddle=\"dialogMiddle\" ref=\"fieldDialog\" />\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"closeDialog\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"enterDialog\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nconst fieldTemplate = {\r\n  fieldName: \"\",\r\n  fieldDesc: \"\",\r\n  fieldType: \"\",\r\n  dataType: \"\",\r\n  fieldJson: \"\",\r\n  columnName: \"\",\r\n  dataTypeLong: \"\",\r\n  comment: \"\",\r\n  fieldSearchType: \"\",\r\n  dictType:\"\"\r\n};\r\n\r\nimport FieldDialog from \"@/view/systemTools/autoCode/component/fieldDialog.vue\";\r\nimport { toUpperCase, toHump } from \"@/utils/stringFun.js\";\r\nimport { createTemp, getDB, getTable, getColume } from \"@/api/autoCode.js\";\r\nimport { getDict } from \"@/utils/dictionary\";\r\n\r\nexport default {\r\n  name: \"autoCode\",\r\n  data() {\r\n    return {\r\n      activeNames: [\"\"],\r\n      dbform: {\r\n        dbName: \"\",\r\n        tableName: \"\"\r\n      },\r\n      dbOptions: [],\r\n      tableOptions: [],\r\n      addFlag: \"\",\r\n      fdMap: {},\r\n      form: {\r\n        structName: \"\",\r\n        tableName: \"\",\r\n        packageName: \"\",\r\n        abbreviation: \"\",\r\n        description: \"\",\r\n        autoCreateApiToSql: false,\r\n        fields: []\r\n      },\r\n      rules: {\r\n        structName: [\r\n          { required: true, message: \"请输入结构体名称\", trigger: \"blur\" }\r\n        ],\r\n        abbreviation: [\r\n          { required: true, message: \"请输入结构体简称\", trigger: \"blur\" }\r\n        ],\r\n        description: [\r\n          { required: true, message: \"请输入结构体描述\", trigger: \"blur\" }\r\n        ],\r\n        packageName: [\r\n          {\r\n            required: true,\r\n            message: \"文件名称：sys_xxxx_xxxx\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      dialogMiddle: {},\r\n      bk: {},\r\n      dialogFlag: false\r\n    };\r\n  },\r\n  components: {\r\n    FieldDialog\r\n  },\r\n  methods: {\r\n    editAndAddField(item) {\r\n      this.dialogFlag = true;\r\n      if (item) {\r\n        this.addFlag = \"edit\";\r\n        this.bk = JSON.parse(JSON.stringify(item));\r\n        this.dialogMiddle = item;\r\n      } else {\r\n        this.addFlag = \"add\";\r\n        this.dialogMiddle = JSON.parse(JSON.stringify(fieldTemplate));\r\n      }\r\n    },\r\n    moveUpField(index) {\r\n      if (index == 0) {\r\n        return;\r\n      }\r\n      const oldUpField = this.form.fields[index - 1];\r\n      this.form.fields.splice(index - 1, 1);\r\n      this.form.fields.splice(index, 0, oldUpField);\r\n    },\r\n    moveDownField(index) {\r\n      const fCount = this.form.fields.length;\r\n      if (index == fCount - 1) {\r\n        return;\r\n      }\r\n      const oldDownField = this.form.fields[index + 1];\r\n      this.form.fields.splice(index + 1, 1);\r\n      this.form.fields.splice(index, 0, oldDownField);\r\n    },\r\n    enterDialog() {\r\n      this.$refs.fieldDialog.$refs.fieldDialogFrom.validate(valid => {\r\n        if (valid) {\r\n          this.dialogMiddle.fieldName = toUpperCase(\r\n            this.dialogMiddle.fieldName\r\n          );\r\n          if (this.addFlag == \"add\") {\r\n            this.form.fields.push(this.dialogMiddle);\r\n          }\r\n          this.dialogFlag = false;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    closeDialog() {\r\n      if (this.addFlag == \"edit\") {\r\n        this.dialogMiddle = this.bk;\r\n      }\r\n      this.dialogFlag = false;\r\n    },\r\n    deleteField(index) {\r\n      this.form.fields.splice(index, 1);\r\n    },\r\n    async enterForm() {\r\n      if (this.form.fields.length <= 0) {\r\n        this.$message({\r\n          type: \"error\",\r\n          message: \"请填写至少一个field\"\r\n        });\r\n        return false;\r\n      }\r\n      if (\r\n        this.form.fields.some(item => item.fieldName == this.form.structName)\r\n      ) {\r\n        this.$message({\r\n          type: \"error\",\r\n          message: \"存在与结构体同名的字段\"\r\n        });\r\n        return false;\r\n      }\r\n      this.$refs.autoCodeForm.validate(async valid => {\r\n        if (valid) {\r\n          this.form.structName = toUpperCase(this.form.structName);\r\n          if (this.form.structName == this.form.abbreviation) {\r\n            this.$message({\r\n              type: \"error\",\r\n              message: \"structName和struct简称不能相同\"\r\n            });\r\n            return false;\r\n          }\r\n          const data = await createTemp(this.form);\r\n          const blob = new Blob([data]);\r\n          const fileName = \"ginvueadmin.zip\";\r\n          if (\"download\" in document.createElement(\"a\")) {\r\n            // 不是IE浏览器\r\n            let url = window.URL.createObjectURL(blob);\r\n            let link = document.createElement(\"a\");\r\n            link.style.display = \"none\";\r\n            link.href = url;\r\n            link.setAttribute(\"download\", fileName);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link); // 下载完成移除元素\r\n            window.URL.revokeObjectURL(url); // 释放掉blob对象\r\n          } else {\r\n            // IE 10+\r\n            window.navigator.msSaveBlob(blob, fileName);\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    async getDb() {\r\n      const res = await getDB();\r\n      if (res.code == 0) {\r\n        this.dbOptions = res.data.dbs;\r\n      }\r\n    },\r\n    async getTable() {\r\n      const res = await getTable({ dbName: this.dbform.dbName });\r\n      if (res.code == 0) {\r\n        this.tableOptions = res.data.tables;\r\n      }\r\n      this.dbform.tableName = \"\";\r\n    },\r\n    async getColume() {\r\n      const gormModelList = [\"id\", \"created_at\", \"updated_at\", \"deleted_at\"];\r\n      const res = await getColume(this.dbform);\r\n      if (res.code == 0) {\r\n        const tbHump = toHump(this.dbform.tableName);\r\n        this.form.structName = toUpperCase(tbHump);\r\n        this.form.tableName = this.dbform.tableName;\r\n        this.form.packageName = tbHump;\r\n        this.form.abbreviation = tbHump;\r\n        this.form.description = tbHump + \"表\";\r\n        this.form.autoCreateApiToSql = true;\r\n        this.form.fields = [];\r\n        res.data.columes &&\r\n          res.data.columes.map(item => {\r\n            if (!gormModelList.some(gormfd => gormfd == item.columeName)) {\r\n              const fbHump = toHump(item.columeName);\r\n              this.form.fields.push({\r\n                fieldName: toUpperCase(fbHump),\r\n                fieldDesc: item.columeComment || fbHump + \"字段\",\r\n                fieldType: this.fdMap[item.dataType],\r\n                dataType: item.dataType,\r\n                fieldJson: fbHump,\r\n                dataTypeLong: item.dataTypeLong,\r\n                columnName: item.columeName,\r\n                comment: item.columeComment,\r\n                fieldSearchType: \"\",\r\n                dictType:\"\"\r\n              });\r\n            }\r\n          });\r\n      }\r\n    },\r\n    async setFdMap() {\r\n      const fdTpyes = [\"string\", \"int\", \"bool\", \"float64\", \"time.Time\"];\r\n      fdTpyes.map(async fdtype => {\r\n        const res = await getDict(fdtype);\r\n        res.map(item => {\r\n          this.fdMap[item.label] = fdtype;\r\n        });\r\n      });\r\n    }\r\n  },\r\n  created() {\r\n    this.getDb();\r\n    this.setFdMap();\r\n  }\r\n};\r\n</script>\r\n<style scope lang=\"scss\">\r\n.button-box {\r\n  padding: 10px 20px;\r\n  .el-button {\r\n    float: right;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/view/systemTools/autoCode"}]}