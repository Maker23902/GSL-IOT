{"remainingRequest":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js!G:\\Go\\project\\GSL-IOT\\web\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\Go\\project\\GSL-IOT\\web\\src\\store\\module\\dictionary.js","dependencies":[{"path":"G:\\Go\\project\\GSL-IOT\\web\\src\\store\\module\\dictionary.js","mtime":1601862474847},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601862450187},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1601862448530},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\eslint-loader\\index.js","mtime":1601862456257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRzovR28vcHJvamVjdC9HU0wtSU9UL3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkc6L0dvL3Byb2plY3QvR1NMLUlPVC93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgeyBmaW5kU3lzRGljdGlvbmFyeSB9IGZyb20gJ0AvYXBpL3N5c0RpY3Rpb25hcnknOwpleHBvcnQgdmFyIGRpY3Rpb25hcnkgPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgZGljdGlvbmFyeU1hcDoge30KICB9LAogIG11dGF0aW9uczogewogICAgc2V0RGljdGlvbmFyeU1hcDogZnVuY3Rpb24gc2V0RGljdGlvbmFyeU1hcChzdGF0ZSwgZGljdGlvbmFyeU1hcCkgewogICAgICBzdGF0ZS5kaWN0aW9uYXJ5TWFwID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZS5kaWN0aW9uYXJ5TWFwKSwgZGljdGlvbmFyeU1hcCk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICAvLyDku47lkI7lj7Dojrflj5bliqjmgIHot6/nlLEKICAgIGdldERpY3Rpb25hcnk6IGZ1bmN0aW9uIGdldERpY3Rpb25hcnkoX3JlZiwgdHlwZSkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIHN0YXRlLCByZXMsIGRpY3Rpb25hcnlNYXAsIGRpY3Q7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQsIHN0YXRlID0gX3JlZi5zdGF0ZTsKCiAgICAgICAgICAgICAgICBpZiAoIXN0YXRlLmRpY3Rpb25hcnlNYXBbdHlwZV0pIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHN0YXRlLmRpY3Rpb25hcnlNYXBbdHlwZV0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiBmaW5kU3lzRGljdGlvbmFyeSh7CiAgICAgICAgICAgICAgICAgIHR5cGU6IHR5cGUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlcy5jb2RlID09IDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgZGljdGlvbmFyeU1hcCA9IHt9OwogICAgICAgICAgICAgICAgZGljdCA9IFtdOwogICAgICAgICAgICAgICAgcmVzLmRhdGEucmVzeXNEaWN0aW9uYXJ5LnN5c0RpY3Rpb25hcnlEZXRhaWxzICYmIHJlcy5kYXRhLnJlc3lzRGljdGlvbmFyeS5zeXNEaWN0aW9uYXJ5RGV0YWlscy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgZGljdC5wdXNoKHsKICAgICAgICAgICAgICAgICAgICBsYWJlbDogaXRlbS5sYWJlbCwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogaXRlbS52YWx1ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgZGljdGlvbmFyeU1hcFtyZXMuZGF0YS5yZXN5c0RpY3Rpb25hcnkudHlwZV0gPSBkaWN0OwogICAgICAgICAgICAgICAgY29tbWl0KCJzZXREaWN0aW9uYXJ5TWFwIiwgZGljdGlvbmFyeU1hcCk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBzdGF0ZS5kaWN0aW9uYXJ5TWFwW3R5cGVdKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIGdldERpY3Rpb25hcnk6IGZ1bmN0aW9uIGdldERpY3Rpb25hcnkoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmRpY3Rpb25hcnlNYXA7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["G:/Go/project/GSL-IOT/web/src/store/module/dictionary.js"],"names":["findSysDictionary","dictionary","namespaced","state","dictionaryMap","mutations","setDictionaryMap","actions","getDictionary","type","commit","res","code","dict","data","resysDictionary","sysDictionaryDetails","map","item","push","label","value","getters"],"mappings":";;;;AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,IAAMC,UAAU,GAAG;AACtBC,EAAAA,UAAU,EAAE,IADU;AAEtBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,aAAa,EAAE;AADZ,GAFe;AAKtBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,gBADO,4BACUH,KADV,EACiBC,aADjB,EACgC;AACnCD,MAAAA,KAAK,CAACC,aAAN,mCAA2BD,KAAK,CAACC,aAAjC,GAAmDA,aAAnD;AACH;AAHM,GALW;AAWtBG,EAAAA,OAAO,EAAE;AACL;AACMC,IAAAA,aAFD,+BAEkCC,IAFlC,EAEwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvBC,gBAAAA,MAAuB,QAAvBA,MAAuB,EAAfP,KAAe,QAAfA,KAAe;;AAAA,qBACrCA,KAAK,CAACC,aAAN,CAAoBK,IAApB,CADqC;AAAA;AAAA;AAAA;;AAAA,iDAE9BN,KAAK,CAACC,aAAN,CAAoBK,IAApB,CAF8B;;AAAA;AAAA;AAAA,uBAInBT,iBAAiB,CAAC;AAAES,kBAAAA,IAAI,EAAJA;AAAF,iBAAD,CAJE;;AAAA;AAI/BE,gBAAAA,GAJ+B;;AAAA,sBAKjCA,GAAG,CAACC,IAAJ,IAAY,CALqB;AAAA;AAAA;AAAA;;AAM3BR,gBAAAA,aAN2B,GAMX,EANW;AAO3BS,gBAAAA,IAP2B,GAOpB,EAPoB;AAQjCF,gBAAAA,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBC,oBAAzB,IAAiDL,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBC,oBAAzB,CAA8CC,GAA9C,CAAkD,UAAAC,IAAI,EAAI;AACvGL,kBAAAA,IAAI,CAACM,IAAL,CAAU;AACNC,oBAAAA,KAAK,EAAEF,IAAI,CAACE,KADN;AAENC,oBAAAA,KAAK,EAAEH,IAAI,CAACG;AAFN,mBAAV;AAIH,iBALgD,CAAjD;AAMAjB,gBAAAA,aAAa,CAACO,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBN,IAA1B,CAAb,GAA+CI,IAA/C;AACAH,gBAAAA,MAAM,CAAC,kBAAD,EAAqBN,aAArB,CAAN;AAfiC,iDAgB1BD,KAAK,CAACC,aAAN,CAAoBK,IAApB,CAhB0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmB5C;AArBI,GAXa;AAkCtBa,EAAAA,OAAO,EAAC;AACJd,IAAAA,aADI,yBACUL,KADV,EACgB;AAChB,aAAOA,KAAK,CAACC,aAAb;AACH;AAHG;AAlCc,CAAnB","sourcesContent":["import { findSysDictionary } from '@/api/sysDictionary'\n\nexport const dictionary = {\n    namespaced: true,\n    state: {\n        dictionaryMap: {},\n    },\n    mutations: {\n        setDictionaryMap(state, dictionaryMap) {\n            state.dictionaryMap = { ...state.dictionaryMap, ...dictionaryMap }\n        },\n\n    },\n    actions: {\n        // 从后台获取动态路由\n        async getDictionary({ commit, state }, type) {\n            if (state.dictionaryMap[type]) {\n                return state.dictionaryMap[type]\n            } else {\n                const res = await findSysDictionary({ type })\n                if (res.code == 0) {\n                    const dictionaryMap = {}\n                    const dict = []\n                    res.data.resysDictionary.sysDictionaryDetails && res.data.resysDictionary.sysDictionaryDetails.map(item => {\n                        dict.push({\n                            label: item.label,\n                            value: item.value\n                        })\n                    })\n                    dictionaryMap[res.data.resysDictionary.type] = dict\n                    commit(\"setDictionaryMap\", dictionaryMap)\n                    return state.dictionaryMap[type]\n                }\n            }\n        }\n    },\n    getters:{\n        getDictionary(state){\n            return state.dictionaryMap\n        }\n    }\n}"]}]}