{"remainingRequest":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js!D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Programs\\Project\\GSL-IOT\\web\\src\\permission.js","dependencies":[{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\src\\permission.js","mtime":1605233962967},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605233951981},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1605233951045},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\eslint-loader\\index.js","mtime":1605233954733}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovUHJvZ3JhbXMvUHJvamVjdC9HU0wtSU9UL3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L1Byb2dyYW1zL1Byb2plY3QvR1NMLUlPVC93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHsgc3RvcmUgfSBmcm9tICdAL3N0b3JlL2luZGV4JzsKdmFyIGFzeW5jUm91dGVyRmxhZyA9IDA7CnZhciB3aGl0ZUxpc3QgPSBbJ2xvZ2luJywgJ3JlZ2lzdGVyJ107CnJvdXRlci5iZWZvcmVFYWNoKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRvLCBmcm9tLCBuZXh0KSB7CiAgICB2YXIgdG9rZW4sIGFzeW5jUm91dGVyczsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgdG9rZW4gPSBzdG9yZS5nZXR0ZXJzWyd1c2VyL3Rva2VuJ107IC8vIOWcqOeZveWQjeWNleS4reeahOWIpOaWreaDheWGtQoKICAgICAgICAgICAgaWYgKCEod2hpdGVMaXN0LmluZGV4T2YodG8ubmFtZSkgPiAtMSkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRva2VuKSB7CiAgICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgICBwYXRoOiAnL2xheW91dC9kYXNoYm9hcmQnCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgaWYgKCF0b2tlbikgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKGFzeW5jUm91dGVyRmxhZykgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgYXN5bmNSb3V0ZXJGbGFnKys7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoKCdyb3V0ZXIvU2V0QXN5bmNSb3V0ZXInKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBhc3luY1JvdXRlcnMgPSBzdG9yZS5nZXR0ZXJzWydyb3V0ZXIvYXN5bmNSb3V0ZXJzJ107CiAgICAgICAgICAgIHJvdXRlci5hZGRSb3V0ZXMoYXN5bmNSb3V0ZXJzKTsKICAgICAgICAgICAgbmV4dChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRvKSwge30sIHsKICAgICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICBuZXh0KCk7CgogICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgLy8g5LiN5Zyo55m95ZCN5Y2V5Lit5bm25LiU5pyq55m76ZmG55qE5pe25YCZCiAgICAgICAgICAgIGlmICghdG9rZW4pIHsKICAgICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICAgIG5hbWU6ICJsb2dpbiIsCiAgICAgICAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICAgICAgICByZWRpcmVjdDogZG9jdW1lbnQubG9jYXRpb24uaGFzaAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gsIF94MiwgX3gzKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSk7"},{"version":3,"sources":["D:/Programs/Project/GSL-IOT/web/src/permission.js"],"names":["router","store","asyncRouterFlag","whiteList","beforeEach","to","from","next","token","getters","indexOf","name","path","dispatch","asyncRouters","addRoutes","replace","query","redirect","document","location","hash"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,IAAIC,eAAe,GAAG,CAAtB;AAEA,IAAMC,SAAS,GAAG,CAAC,OAAD,EAAU,UAAV,CAAlB;AAEAH,MAAM,CAACI,UAAP;AAAA,qEAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,YAAAA,KADQ,GACAP,KAAK,CAACQ,OAAN,CAAc,YAAd,CADA,EAEV;;AAFU,kBAGVN,SAAS,CAACO,OAAV,CAAkBL,EAAE,CAACM,IAArB,IAA6B,CAAC,CAHpB;AAAA;AAAA;AAAA;;AAIV,gBAAIH,KAAJ,EAAW;AACPD,cAAAA,IAAI,CAAC;AAAEK,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAAJ;AACH,aAFD,MAEO;AACHL,cAAAA,IAAI;AACP;;AARS;AAAA;;AAAA;AAAA,iBAWNC,KAXM;AAAA;AAAA;AAAA;;AAAA,gBAaDN,eAbC;AAAA;AAAA;AAAA;;AAcFA,YAAAA,eAAe;AAdb;AAAA,mBAeID,KAAK,CAACY,QAAN,CAAe,uBAAf,CAfJ;;AAAA;AAgBIC,YAAAA,YAhBJ,GAgBmBb,KAAK,CAACQ,OAAN,CAAc,qBAAd,CAhBnB;AAiBFT,YAAAA,MAAM,CAACe,SAAP,CAAiBD,YAAjB;AACAP,YAAAA,IAAI,iCAAKF,EAAL;AAASW,cAAAA,OAAO,EAAE;AAAlB,eAAJ;AAlBE;AAAA;;AAAA;AAoBFT,YAAAA,IAAI;;AApBF;AAuBV;AACA,gBAAI,CAACC,KAAL,EAAY;AACRD,cAAAA,IAAI,CAAC;AACDI,gBAAAA,IAAI,EAAE,OADL;AAEDM,gBAAAA,KAAK,EAAE;AACHC,kBAAAA,QAAQ,EAAEC,QAAQ,CAACC,QAAT,CAAkBC;AADzB;AAFN,eAAD,CAAJ;AAMH;;AA/BS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import router from './router'\r\nimport { store } from '@/store/index'\r\n\r\nlet asyncRouterFlag = 0\r\n\r\nconst whiteList = ['login', 'register']\r\n\r\nrouter.beforeEach(async(to, from, next) => {\r\n    const token = store.getters['user/token']\r\n        // 在白名单中的判断情况\r\n    if (whiteList.indexOf(to.name) > -1) {\r\n        if (token) {\r\n            next({ path: '/layout/dashboard' })\r\n        } else {\r\n            next()\r\n        }\r\n    } else {\r\n        // 不在白名单中并且已经登陆的时候\r\n        if (token) {\r\n            // 添加flag防止多次获取动态路由和栈溢出\r\n            if (!asyncRouterFlag) {\r\n                asyncRouterFlag++\r\n                await store.dispatch('router/SetAsyncRouter')\r\n                const asyncRouters = store.getters['router/asyncRouters']\r\n                router.addRoutes(asyncRouters)\r\n                next({...to, replace: true })\r\n            } else {\r\n                next()\r\n            }\r\n        }\r\n        // 不在白名单中并且未登陆的时候\r\n        if (!token) {\r\n            next({\r\n                name: \"login\",\r\n                query: {\r\n                    redirect: document.location.hash\r\n                }\r\n            })\r\n        }\r\n    }\r\n})"]}]}