{"remainingRequest":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js!G:\\Go\\project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\Go\\project\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\Go\\project\\GSL-IOT\\web\\src\\view\\superAdmin\\api\\api.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\Go\\project\\GSL-IOT\\web\\src\\view\\superAdmin\\api\\api.vue","mtime":1601862474887},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601862450187},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1601862448530},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601862450187},{"path":"G:\\Go\\project\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1601862472047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["api.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"search-term\">\n      <el-form :inline=\"true\" :model=\"searchInfo\" class=\"demo-form-inline\">\n        <el-form-item label=\"路径\">\n          <el-input placeholder=\"路径\" v-model=\"searchInfo.path\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"描述\">\n          <el-input placeholder=\"描述\" v-model=\"searchInfo.description\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"api组\">\n          <el-input placeholder=\"api组\" v-model=\"searchInfo.apiGroup\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"请求\">\n          <el-select clearable placeholder=\"请选择\" v-model=\"searchInfo.method\">\n            <el-option\n              :key=\"item.value\"\n              :label=\"`${item.label}(${item.value})`\"\n              :value=\"item.value\"\n              v-for=\"item in methodOptions\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button @click=\"onSubmit\" type=\"primary\">查询</el-button>\n        </el-form-item>\n        <el-form-item>\n          <el-button @click=\"openDialog('addApi')\" type=\"primary\">新增api</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <el-table :data=\"tableData\" @sort-change=\"sortChange\" border stripe>\n      <el-table-column label=\"id\" min-width=\"60\" prop=\"ID\" sortable=\"custom\"></el-table-column>\n      <el-table-column label=\"api路径\" min-width=\"150\" prop=\"path\" sortable=\"custom\"></el-table-column>\n      <el-table-column label=\"api分组\" min-width=\"150\" prop=\"apiGroup\" sortable=\"custom\"></el-table-column>\n      <el-table-column label=\"api简介\" min-width=\"150\" prop=\"description\" sortable=\"custom\"></el-table-column>\n      <el-table-column label=\"请求\" min-width=\"150\" prop=\"method\" sortable=\"custom\">\n        <template slot-scope=\"scope\">\n          <div>\n            {{scope.row.method}}\n            <el-tag\n              :key=\"scope.row.methodFiletr\"\n              :type=\"scope.row.method|tagTypeFiletr\"\n              effect=\"dark\"\n              size=\"mini\"\n            >{{scope.row.method|methodFiletr}}</el-tag>\n            <!-- {{scope.row.method|methodFiletr}} -->\n          </div>\n        </template>\n      </el-table-column>\n\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <el-button @click=\"editApi(scope.row)\" size=\"small\" type=\"primary\" icon=\"el-icon-edit\">编辑</el-button>\n          <el-button @click=\"deleteApi(scope.row)\" size=\"small\" type=\"danger\" icon=\"el-icon-delete\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      :current-page=\"page\"\n      :page-size=\"pageSize\"\n      :page-sizes=\"[10, 30, 50, 100]\"\n      :style=\"{float:'right',padding:'20px'}\"\n      :total=\"total\"\n      @current-change=\"handleCurrentChange\"\n      @size-change=\"handleSizeChange\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n    ></el-pagination>\n\n    <el-dialog :before-close=\"closeDialog\" :title=\"dialogTitle\" :visible.sync=\"dialogFormVisible\">\n      <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" label-width=\"80px\" ref=\"apiForm\">\n        <el-form-item label=\"路径\" prop=\"path\">\n          <el-input autocomplete=\"off\" v-model=\"form.path\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"请求\" prop=\"method\">\n          <el-select placeholder=\"请选择\" v-model=\"form.method\">\n            <el-option\n              :key=\"item.value\"\n              :label=\"`${item.label}(${item.value})`\"\n              :value=\"item.value\"\n              v-for=\"item in methodOptions\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"api分组\" prop=\"apiGroup\">\n          <el-input autocomplete=\"off\" v-model=\"form.apiGroup\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"api简介\" prop=\"description\">\n          <el-input autocomplete=\"off\" v-model=\"form.description\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div class=\"warning\">新增Api需要在角色管理内配置权限才可使用</div>\n      <div class=\"dialog-footer\" slot=\"footer\">\n        <el-button @click=\"closeDialog\">取 消</el-button>\n        <el-button @click=\"enterDialog\" type=\"primary\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n\n<script>\n// 获取列表内容封装在mixins内部  getTableData方法 初始化已封装完成 条件搜索时候 请把条件安好后台定制的结构体字段 放到 this.searchInfo 中即可实现条件搜索\n\nimport {\n  getApiById,\n  getApiList,\n  createApi,\n  updateApi,\n  deleteApi\n} from '@/api/api'\nimport infoList from '@/components/mixins/infoList'\nimport { toSQLLine } from '@/utils/stringFun'\nconst methodOptions = [\n  {\n    value: 'POST',\n    label: '创建',\n    type: 'success'\n  },\n  {\n    value: 'GET',\n    label: '查看',\n    type: ''\n  },\n  {\n    value: 'PUT',\n    label: '更新',\n    type: 'warning'\n  },\n  {\n    value: 'DELETE',\n    label: '删除',\n    type: 'danger'\n  }\n]\n\nexport default {\n  name: 'Api',\n  mixins: [infoList],\n  data() {\n    return {\n      listApi: getApiList,\n      dialogFormVisible: false,\n      dialogTitle: '新增Api',\n      form: {\n        path: '',\n        apiGroup: '',\n        method: '',\n        description: ''\n      },\n      methodOptions: methodOptions,\n      type: '',\n      rules: {\n        path: [{ required: true, message: '请输入api路径', trigger: 'blur' }],\n        apiGroup: [\n          { required: true, message: '请输入组名称', trigger: 'blur' }\n        ],\n        method: [\n          { required: true, message: '请选择请求方式', trigger: 'blur' }\n        ],\n        description: [\n          { required: true, message: '请输入api介绍', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    // 排序\n    sortChange({ prop, order }) {\n      if (prop) {\n        this.searchInfo.orderKey = toSQLLine(prop)\n        this.searchInfo.desc = order == 'descending'\n      }\n      this.getTableData()\n    },\n    //条件搜索前端看此方法\n    onSubmit() {\n      this.page = 1\n      this.pageSize = 10\n      this.getTableData()\n    },\n    initForm() {\n      this.$refs.apiForm.resetFields()\n      this.form= {\n        path: '',\n        apiGroup: '',\n        method: '',\n        description: ''\n      }\n    },\n    closeDialog() {\n      this.initForm()\n      this.dialogFormVisible = false\n    },\n    openDialog(type) {\n      switch (type) {\n        case 'addApi':\n          this.dialogTitlethis = '新增Api'\n          break\n        case 'edit':\n          this.dialogTitlethis = '编辑Api'\n          break\n        default:\n          break\n      }\n      this.type = type\n      this.dialogFormVisible = true\n    },\n    async editApi(row) {\n      const res = await getApiById({ id: row.ID })\n      this.form = res.data.api\n      this.openDialog('edit')\n    },\n    async deleteApi(row) {\n      this.$confirm('此操作将永久删除所有角色下该菜单, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(async () => {\n          const res = await deleteApi(row)\n          if (res.code == 0) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            })\n            this.getTableData()\n          }\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n    },\n    async enterDialog() {\n      this.$refs.apiForm.validate(async valid => {\n        if (valid) {\n          switch (this.type) {\n            case 'addApi':\n              {\n                const res = await createApi(this.form)\n                if (res.code == 0) {\n                  this.$message({\n                    type: 'success',\n                    message: '添加成功',\n                    showClose: true\n                  })\n                }\n                this.getTableData()\n                this.closeDialog()\n              }\n\n              break\n            case 'edit':\n              {\n                const res = await updateApi(this.form)\n                if (res.code == 0) {\n                  this.$message({\n                    type: 'success',\n                    message: '编辑成功',\n                    showClose: true\n                  })\n                }\n                this.getTableData()\n                this.closeDialog()\n              }\n              break\n            default:\n              {\n                this.$message({\n                  type: 'error',\n                  message: '未知操作',\n                  showClose: true\n                })\n              }\n              break\n          }\n        }\n      })\n    }\n  },\n  filters: {\n    methodFiletr(value) {\n      const target = methodOptions.filter(item => item.value === value)[0]\n      // return target && `${target.label}(${target.value})`\n      return target && `${target.label}`\n    },\n    tagTypeFiletr(value) {\n      const target = methodOptions.filter(item => item.value === value)[0]\n      return target && `${target.type}`\n    }\n  },\n  created(){\n    this.getTableData()\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n.button-box {\n  padding: 10px 20px;\n  .el-button {\n    float: right;\n  }\n}\n.el-tag--mini {\n  margin-left: 5px;\n}\n.warning {\n  color: #dc143c;\n}\n</style>"],"sourceRoot":"src/view/superAdmin/api"}]}