{"remainingRequest":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js!D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Programs\\Project\\GSL-IOT\\web\\src\\store\\module\\user.js","dependencies":[{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\src\\store\\module\\user.js","mtime":1602575642574},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovUHJvZ3JhbXMvUHJvamVjdC9HU0wtSU9UL3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkQ6L1Byb2dyYW1zL1Byb2plY3QvR1NMLUlPVC93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgeyBsb2dpbiB9IGZyb20gJ0AvYXBpL3VzZXInOwppbXBvcnQgeyBqc29uSW5CbGFja2xpc3QgfSBmcm9tICdAL2FwaS9qd3QnOwppbXBvcnQgcm91dGVyIGZyb20gJ0Avcm91dGVyL2luZGV4JzsKZXhwb3J0IHZhciB1c2VyID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIHVzZXJJbmZvOiB7CiAgICAgIHV1aWQ6ICIiLAogICAgICBuaWNrTmFtZTogIiIsCiAgICAgIGhlYWRlckltZzogIiIsCiAgICAgIGF1dGhvcml0eTogIiIKICAgIH0sCiAgICB0b2tlbjogIiIsCiAgICBMU3Rva2VuOiAiIiAvL0xvcmFTZXJ2ZXIgdG9rZW4KCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldFVzZXJJbmZvOiBmdW5jdGlvbiBzZXRVc2VySW5mbyhzdGF0ZSwgdXNlckluZm8pIHsKICAgICAgLy8g6L+Z6YeM55qEIGBzdGF0ZWAg5a+56LGh5piv5qih5Z2X55qE5bGA6YOo54q25oCBCiAgICAgIHN0YXRlLnVzZXJJbmZvID0gdXNlckluZm87CiAgICB9LAogICAgc2V0VG9rZW46IGZ1bmN0aW9uIHNldFRva2VuKHN0YXRlLCB0b2tlbikgewogICAgICAvLyDov5nph4znmoQgYHN0YXRlYCDlr7nosaHmmK/mqKHlnZfnmoTlsYDpg6jnirbmgIEKICAgICAgc3RhdGUudG9rZW4gPSB0b2tlbjsKICAgIH0sCiAgICBTZXRMU3Rva2VuOiBmdW5jdGlvbiBTZXRMU3Rva2VuKHN0YXRlLCB0b2tlbikgewogICAgICBzdGF0ZS5MU3Rva2VuID0gdG9rZW47CiAgICB9LAogICAgTG9naW5PdXQ6IGZ1bmN0aW9uIExvZ2luT3V0KHN0YXRlKSB7CiAgICAgIHN0YXRlLnVzZXJJbmZvID0ge307CiAgICAgIHN0YXRlLnRva2VuID0gIiI7CiAgICAgIHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAnbG9naW4nLAogICAgICAgIHJlcGxhY2U6IHRydWUKICAgICAgfSk7CiAgICAgIHNlc3Npb25TdG9yYWdlLmNsZWFyKCk7CiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgIH0sCiAgICBSZXNldFVzZXJJbmZvOiBmdW5jdGlvbiBSZXNldFVzZXJJbmZvKHN0YXRlKSB7CiAgICAgIHZhciB1c2VySW5mbyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgICAgIHN0YXRlLnVzZXJJbmZvID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZS51c2VySW5mbyksIHVzZXJJbmZvKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIExvZ2luSW46IGZ1bmN0aW9uIExvZ2luSW4oX3JlZiwgbG9naW5JbmZvKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcmVzLCByZWRpcmVjdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGxvZ2luKGxvZ2luSW5mbyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09IDApIHsKICAgICAgICAgICAgICAgICAgY29tbWl0KCdzZXRVc2VySW5mbycsIHJlcy5kYXRhLnVzZXIpOwogICAgICAgICAgICAgICAgICBjb21taXQoJ3NldFRva2VuJywgcmVzLmRhdGEudG9rZW4pOwogICAgICAgICAgICAgICAgICByZWRpcmVjdCA9IHJvdXRlci5oaXN0b3J5LmN1cnJlbnQucXVlcnkucmVkaXJlY3Q7CgogICAgICAgICAgICAgICAgICBpZiAocmVkaXJlY3QpIHsKICAgICAgICAgICAgICAgICAgICByb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICBwYXRoOiByZWRpcmVjdAogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgIHBhdGg6ICcvbGF5b3V0L2Rhc2hib2FyZCcKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgTG9naW5PdXQ6IGZ1bmN0aW9uIExvZ2luT3V0KF9yZWYyKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGpzb25JbkJsYWNrbGlzdCgpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMCkgewogICAgICAgICAgICAgICAgICBjb21taXQoIkxvZ2luT3V0Iik7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgZ2V0dGVyczogewogICAgdXNlckluZm86IGZ1bmN0aW9uIHVzZXJJbmZvKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VySW5mbzsKICAgIH0sCiAgICB0b2tlbjogZnVuY3Rpb24gdG9rZW4oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnRva2VuOwogICAgfSwKICAgIExTdG9rZW46IGZ1bmN0aW9uIExTdG9rZW4oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLkxTdG9rZW47CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["D:/Programs/Project/GSL-IOT/web/src/store/module/user.js"],"names":["login","jsonInBlacklist","router","user","namespaced","state","userInfo","uuid","nickName","headerImg","authority","token","LStoken","mutations","setUserInfo","setToken","SetLStoken","LoginOut","push","name","replace","sessionStorage","clear","window","location","reload","ResetUserInfo","actions","LoginIn","loginInfo","commit","res","code","data","redirect","history","current","query","path","getters"],"mappings":"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","sourcesContent":["import { login } from '@/api/user'\nimport { jsonInBlacklist } from '@/api/jwt'\nimport router from '@/router/index'\nexport const user = {\n    namespaced: true,\n    state: {\n        userInfo: {\n            uuid: \"\",\n            nickName: \"\",\n            headerImg: \"\",\n            authority: \"\",\n        },\n        token: \"\",\n        LStoken: \"\",  //LoraServer token\n    },\n    mutations: {\n        setUserInfo(state, userInfo) {\n            // 这里的 `state` 对象是模块的局部状态\n            state.userInfo = userInfo\n        },\n        setToken(state, token) {\n            // 这里的 `state` 对象是模块的局部状态\n            state.token = token\n        },\n        SetLStoken(state,token){\n            state.LStoken=token\n        },\n        LoginOut(state) {\n            state.userInfo = {}\n            state.token = \"\"\n            router.push({ name: 'login', replace: true })\n            sessionStorage.clear()\n            window.location.reload()\n        },\n        ResetUserInfo(state, userInfo = {}) {\n            state.userInfo = {...state.userInfo,\n                ...userInfo\n            }\n        }\n    },\n    actions: {\n        async LoginIn({ commit }, loginInfo) {\n            const res = await login(loginInfo)\n            if (res.code == 0) {\n                commit('setUserInfo', res.data.user)\n                commit('setToken', res.data.token)\n                const redirect = router.history.current.query.redirect\n                if (redirect) {\n                    router.push({ path: redirect })\n                } else {\n                    router.push({ path: '/layout/dashboard' })\n                }\n            }\n        },\n        async LoginOut({ commit }) {\n            const res = await jsonInBlacklist()\n            if (res.code == 0) {\n                commit(\"LoginOut\")\n            }\n        }\n    },\n    getters: {\n        userInfo(state) {\n            return state.userInfo\n        },\n        token(state) {\n            return state.token\n        },\n        LStoken(state){\n            return state.LStoken\n        }\n\n    }\n}"]}]}