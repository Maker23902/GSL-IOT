{"remainingRequest":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js!D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Programs\\Project\\GSL-IOT\\web\\src\\view\\example\\simpleUploader\\simpleUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\src\\view\\example\\simpleUploader\\simpleUploader.vue","mtime":1605233962982},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605233951981},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1605233951045},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605233951981},{"path":"D:\\Programs\\Project\\GSL-IOT\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1605233962282}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJEOi9Qcm9ncmFtcy9Qcm9qZWN0L0dTTC1JT1Qvd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovUHJvZ3JhbXMvUHJvamVjdC9HU0wtSU9UL3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBub3RVcGxvYWRlZENodW5rcyA9IFtdOyAvLyDlt7Lnu4/kuIrkvKDov4fnmoTmlofku7ZjaHVua051bWJlcuaVsOe7hAoKdmFyIGlzVXBsb2FkZWQgPSBmYWxzZTsgLy8g5paH5Lu25bey57uP5LiK5Lyg5oiQ5Yqf5LqGCgppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CmltcG9ydCB7IGNoZWNrRmlsZU1kNSwgbWVyZ2VGaWxlTWQ1IH0gZnJvbSAiQC9hcGkvc2ltcGxlVXBsb2FkZXIiOwppbXBvcnQgU3BhcmtNRDUgZnJvbSAic3BhcmstbWQ1IjsKdmFyIHBhdGggPSBwcm9jZXNzLmVudi5WVUVfQVBQX0JBU0VfQVBJOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInNpbXBsZVVwbG9hZGVyIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWQ1OiAiIgogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoInVzZXIiLCBbInVzZXJJbmZvIiwgInRva2VuIl0pKSwge30sIHsKICAgIHN0YXR1c1RleHQ6IGZ1bmN0aW9uIHN0YXR1c1RleHQoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgc3VjY2VzczogIuaIkOWKn+S6hiIsCiAgICAgICAgZXJyb3I6ICLlh7rplJnkuoYiLAogICAgICAgIHVwbG9hZGluZzogIuS4iuS8oOS4rSIsCiAgICAgICAgcGF1c2VkOiAi5pqC5YGc5LitIiwKICAgICAgICB3YWl0aW5nOiAi562J5b6F5LitIgogICAgICB9OwogICAgfSwKICAgIG9wdGlvbnM6IGZ1bmN0aW9uIG9wdGlvbnMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdGFyZ2V0OiBwYXRoICsgIi9zaW1wbGVVcGxvYWRlci91cGxvYWQiLAogICAgICAgIHRlc3RDaHVua3M6IGZhbHNlLAogICAgICAgIHNpbXVsdGFuZW91c1VwbG9hZHM6IDUsCiAgICAgICAgY2h1bmtTaXplOiAyICogMTAyNCAqIDEwMjQsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgIngtdG9rZW4iOiB0aGlzLnRva2VuLAogICAgICAgICAgIngtdXNlci1pZCI6IHRoaXMudXNlckluZm8uSUQKICAgICAgICB9LAogICAgICAgIGNoZWNrQ2h1bmtVcGxvYWRlZEJ5UmVzcG9uc2U6IGZ1bmN0aW9uIGNoZWNrQ2h1bmtVcGxvYWRlZEJ5UmVzcG9uc2UoY2h1bmspIHsKICAgICAgICAgIGlmIChpc1VwbG9hZGVkKSB7CiAgICAgICAgICAgIHJldHVybiB0cnVlOyAvLyByZXR1cm4gdHJ1ZSDkvJrlv73nlaXlvZPliY3mlofku7bvvIzkuI3kvJrlho3lj5HpgIHnu5nlkI7lj7AKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIOagueaNruW3sue7j+S4iuS8oOi/h+eahOWIh+eJh+adpei/m+ihjOW/veeVpQogICAgICAgICAgICByZXR1cm4gbm90VXBsb2FkZWRDaHVua3MgJiYgbm90VXBsb2FkZWRDaHVua3Muc29tZShmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgIHJldHVybiBpdGVtLmNodW5rTnVtYmVyID09IGNodW5rLm9mZnNldCArIDE7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfTsKICAgIH0KICB9KSwKICBtZXRob2RzOiB7CiAgICAvLyDkuIrkvKDljZXkuKrmlofku7YKICAgIGZpbGVBZGRlZDogZnVuY3Rpb24gZmlsZUFkZGVkKGZpbGUpIHsKICAgICAgdGhpcy5jb21wdXRlTUQ1KGZpbGUpOyAvLyDnlJ/miJBNRDUKICAgIH0sCiAgICAvLyDorqHnrpdNRDXlgLwKICAgIGNvbXB1dGVNRDU6IGZ1bmN0aW9uIGNvbXB1dGVNRDUoZmlsZSkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIGlzVXBsb2FkZWQgPSBmYWxzZTsgLy8g6L+Z5Liq5paH5Lu25piv5ZCm5bey57uP5LiK5Lyg5oiQ5Yqf6L+HCgogICAgICBub3RVcGxvYWRlZENodW5rcyA9IFtdOyAvLyDmnKrmiJDlip/nmoRjaHVua051bWJlcgoKICAgICAgdmFyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICB2YXIgbWQ1ID0gIiI7CiAgICAgIGZpbGUucGF1c2UoKTsKICAgICAgZmlsZVJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihmaWxlLmZpbGUpOwoKICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGUpIHsKICAgICAgICAgIHZhciByZXM7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgIGlmICghKGZpbGUuc2l6ZSAhPSBlLnRhcmdldC5yZXN1bHQuYnl0ZUxlbmd0aCkpIHsKICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgdGhpcy5lcnJvcigiQnJvd3NlciByZXBvcnRlZCBzdWNjZXNzIGJ1dCBjb3VsZCBub3QgcmVhZCB0aGUgZmlsZSB1bnRpbCB0aGUgZW5kLiIpOwogICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICBtZDUgPSBTcGFya01ENS5BcnJheUJ1ZmZlci5oYXNoKGUudGFyZ2V0LnJlc3VsdCwgZmFsc2UpOwogICAgICAgICAgICAgICAgICBmaWxlLnVuaXF1ZUlkZW50aWZpZXIgPSBtZDU7CgogICAgICAgICAgICAgICAgICBpZiAoIShtZDUgIT0gIiIpKSB7CiAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoZWNrRmlsZU1kNSh7CiAgICAgICAgICAgICAgICAgICAgbWQ1OiBtZDUKICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09IDApIHsKICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuaXNEb25lKSB7CiAgICAgICAgICAgICAgICAgICAgICAvLyDkuIrkvKDmiJDlip/ov4cKICAgICAgICAgICAgICAgICAgICAgIGlzVXBsb2FkZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgdGhhdC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICLor6Xmlofku7blt7Lnu4/kuIrkvKDmiJDlip/ov4fkuobvvIznp5LkvKDmiJDlip/jgIIiLAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIKICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgZmlsZS5jYW5jZWwoKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgaXNVcGxvYWRlZCA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgbm90VXBsb2FkZWRDaHVua3MgPSByZXMuZGF0YS5jaHVua3M7CgogICAgICAgICAgICAgICAgICAgICAgaWYgKG5vdFVwbG9hZGVkQ2h1bmtzLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgICAgICBmaWxlLnJlc3VtZSgpOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKTsKCiAgICAgIGZpbGVSZWFkZXIub25lcnJvciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB0aGlzLmVycm9yKCJnZW5lcmF0ZXIgbWQ1IOaXtkZpbGVSZWFkZXLlvILmraXor7vlj5bmlofku7blh7rplJnkuobvvIxGaWxlUmVhZGVyIG9uZXJyb3Igd2FzIHRyaWdnZXJlZCwgbWF5YmUgdGhlIGJyb3dzZXIgYWJvcnRlZCBkdWUgdG8gaGlnaCBtZW1vcnkgdXNhZ2UuIik7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9OwogICAgfSwKICAgIC8vIOS4iuS8oOi/m+W6pgogICAgb25GaWxlUHJvZ3Jlc3M6IGZ1bmN0aW9uIG9uRmlsZVByb2dyZXNzKCkge30sCiAgICAvLyDkuIrkvKDmiJDlip8KICAgIG9uRmlsZVN1Y2Nlc3M6IGZ1bmN0aW9uIG9uRmlsZVN1Y2Nlc3Mocm9vdEZpbGUsIGZpbGUpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBtZXJnZUZpbGVNZDUoewogICAgICAgICAgICAgICAgICBtZDU6IGZpbGUudW5pcXVlSWRlbnRpZmllciwKICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IGZpbGUubmFtZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9uRmlsZUVycm9yOiBmdW5jdGlvbiBvbkZpbGVFcnJvcihyb290RmlsZSwgZmlsZSwgcmVzcG9uc2UpIHsKICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgbWVzc2FnZTogcmVzcG9uc2UsCiAgICAgICAgdHlwZTogImVycm9yIgogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["simpleUploader.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <uploader\r\n    :options=\"options\"\r\n    :file-status-text=\"statusText\"\r\n    :autoStart=\"false\"\r\n    @file-added=\"fileAdded\"\r\n    @file-progress=\"onFileProgress\"\r\n    @file-success=\"onFileSuccess\"\r\n    @file-error=\"onFileError\"\r\n    class=\"uploader-example\"\r\n  >\r\n    <uploader-unsupport></uploader-unsupport>\r\n    <uploader-drop>\r\n      <p>拖拽文件至此或点击</p>\r\n      <uploader-btn>选择文件</uploader-btn>\r\n    </uploader-drop>\r\n    <uploader-list></uploader-list>\r\n  </uploader>\r\n</template>\r\n\r\n<script>\r\nvar notUploadedChunks = []; // 已经上传过的文件chunkNumber数组\r\nvar isUploaded = false; // 文件已经上传成功了\r\nimport { mapGetters } from \"vuex\";\r\nimport { checkFileMd5,mergeFileMd5 } from \"@/api/simpleUploader\";\r\nimport SparkMD5 from \"spark-md5\";\r\nconst path = process.env.VUE_APP_BASE_API;\r\nexport default {\r\n  name: \"simpleUploader\",\r\n  data(){\r\n    return{\r\n      md5:\"\"\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"user\", [\"userInfo\", \"token\"]),\r\n    statusText() {\r\n      return {\r\n        success: \"成功了\",\r\n        error: \"出错了\",\r\n        uploading: \"上传中\",\r\n        paused: \"暂停中\",\r\n        waiting: \"等待中\"\r\n      };\r\n    },\r\n    options() {\r\n      return {\r\n        target: path + \"/simpleUploader/upload\",\r\n        testChunks: false,\r\n        simultaneousUploads: 5,\r\n        chunkSize: 2 * 1024 * 1024,\r\n        headers: {\r\n          \"x-token\": this.token,\r\n          \"x-user-id\": this.userInfo.ID\r\n        },\r\n        checkChunkUploadedByResponse(chunk) {\r\n          if (isUploaded) {\r\n            return true; // return true 会忽略当前文件，不会再发送给后台\r\n          } else {\r\n              // 根据已经上传过的切片来进行忽略\r\n              return (\r\n                notUploadedChunks &&\r\n                notUploadedChunks.some(\r\n                  item => item.chunkNumber == chunk.offset + 1\r\n                )\r\n              );\r\n          }\r\n        }\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    // 上传单个文件\r\n    fileAdded(file) {\r\n      this.computeMD5(file); // 生成MD5\r\n    },\r\n    // 计算MD5值\r\n    computeMD5(file) {\r\n      var that = this;\r\n      isUploaded = false; // 这个文件是否已经上传成功过\r\n      notUploadedChunks = []; // 未成功的chunkNumber\r\n      var fileReader = new FileReader();\r\n      var md5 = \"\";\r\n\r\n      file.pause();\r\n\r\n      fileReader.readAsArrayBuffer(file.file);\r\n      fileReader.onload = async function(e) {\r\n        if (file.size != e.target.result.byteLength) {\r\n          this.error(\r\n            \"Browser reported success but could not read the file until the end.\"\r\n          );\r\n          return false;\r\n        }\r\n        md5 = SparkMD5.ArrayBuffer.hash(e.target.result, false);\r\n        \r\n        file.uniqueIdentifier = md5;\r\n        if (md5 != \"\") {\r\n          const res = await checkFileMd5({ md5: md5 });\r\n          if (res.code == 0) {\r\n            if (res.data.isDone) {\r\n              // 上传成功过\r\n              isUploaded = true;\r\n              that.$message({\r\n                message: \"该文件已经上传成功过了，秒传成功。\",\r\n                type: \"success\"\r\n              });\r\n\r\n              file.cancel();\r\n            } else {\r\n              isUploaded = false;\r\n              notUploadedChunks = res.data.chunks;\r\n              if(notUploadedChunks.length){\r\n                file.resume();\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        \r\n      };\r\n      fileReader.onerror = function() {\r\n        this.error(\r\n          \"generater md5 时FileReader异步读取文件出错了，FileReader onerror was triggered, maybe the browser aborted due to high memory usage.\"\r\n        );\r\n        return false;\r\n      };\r\n    },\r\n    // 上传进度\r\n    onFileProgress() {},\r\n    // 上传成功\r\n    async onFileSuccess(rootFile, file) {\r\n      await mergeFileMd5({md5:file.uniqueIdentifier,fileName:file.name})\r\n    },\r\n    onFileError(rootFile, file, response) {\r\n      this.$message({\r\n        message: response,\r\n        type: \"error\"\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.uploader-example {\r\n  width: 880px;\r\n  padding: 15px;\r\n  margin: 40px auto 0;\r\n  font-size: 12px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\r\n}\r\n.uploader-example .uploader-btn {\r\n  margin-right: 4px;\r\n}\r\n.uploader-example .uploader-list {\r\n  max-height: 440px;\r\n  overflow: auto;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n}\r\n</style>"],"sourceRoot":"src/view/example/simpleUploader"}]}